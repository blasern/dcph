% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/persistent_homology.R
\name{persistent_homology}
\alias{persistent_homology}
\title{Persistent homology}
\usage{
persistent_homology(cover, max_dim = 1,
  representation = c("bit_tree_pivot_column", "vector_vector",
  "sparse_pivot_column", "heap_pivot_column", "full_pivot_column",
  "vector_heap", "vector_set", "vector_list"), reduction = c("twist",
  "standard", "chunk", "row", "spectral_sequence"))
}
\arguments{
\item{cover}{The divisive cover}

\item{max_dim}{The maximal dimension to calculate}

\item{representation}{Boundary matrix representation from PHAT}

\item{reduction}{Reduction method from PHAT}
}
\description{
Calculate the persistent homology from the divisive cover complex
}
\details{
The calculation of persistent homology is done with PHAT.
}
\examples{
rcircle <- function(N, r, sd){
   radius <- rnorm(N, r, sd)
   angle <- runif(N, 0, 2 * pi)
   data.frame(x = radius * cos(angle), 
              y = radius * sin(angle))
}
data_matrix <- rcircle(200, 1, .1)
# get divisive cover
dc <- divisive_cover(data = data_matrix, 
                     division_fct = relative_gap_division(0.1), 
                     stop_fct = stop_relative_filter(relative_filter = 0.5))
# calculate persistent homology
pers <- persistent_homology(dc)
\dontrun{
# plot persistence diagram and barcode
plot_persistence(pers, mode = "diag")
plot_persistence(pers, mode = "bars")
}
}
\references{
Bauer U., Kerber M., Reininghaus J., Wagner H. (2014) PHAT - Persistent Homology Algorithms Toolbox.

https://bitbucket.org/phat-code/phat
}
