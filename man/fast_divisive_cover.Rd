% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/divisive_cover_fast.R
\name{fast_divisive_cover}
\alias{fast_divisive_cover}
\title{fast divisive cover}
\usage{
fast_divisive_cover(data, distance_function, delta, relative_diameter = 0,
  max_nodes = Inf)
}
\arguments{
\item{data}{data that should be divided}

\item{distance_function}{function that compute distance matrix between two matrices}

\item{delta}{delta-parameter for delta-filtered cover (0 < delta <= 1/2)}

\item{relative_diameter}{maximal diameter of the final cover}

\item{max_nodes}{maximum number of nodes the algorithm should generate}
}
\description{
This function divides the data into a cover using the a distance function to compute
the distance between two matrices. Instead of using the full distance matrix to 
calculate the maximal distance in a cover, this maximal distance is approximated. It  
uses an initial point and takes the point with maximal distance from the initial point
as a first basepoint and the point with maximal distance from the first basepoint 
as the second basepoint.
}
\examples{
rcircle <- function(N, r, sd){
  radius <- rnorm(N, r, sd)
  angle <- runif(N, 0, 2 * pi)
  data.frame(x = radius * cos(angle), 
             y = radius * sin(angle))
}
data_matrix <- rcircle(200, 1, .1)
# calculate fast divisive cover
dc <- fast_divisive_cover(data = data_matrix,
                          distance_function = rdist::cdist,
                          delta = 0.1, 
                          relative_diameter = 0.5)
\dontrun{
plot(subcover(dc, .5, "snapshot"))
}
}

